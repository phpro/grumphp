name: GrumPHP

on: [push, pull_request]
permissions:
  contents: read

jobs:
    run:
        runs-on: ${{ matrix.operating-system }}
        strategy:
            matrix:
                operating-system: [ubuntu-latest, macos-latest] #windows-latest currently not working
                php-versions: ['8.0', '8.1', '8.2']
                composer-options: ['', '--prefer-lowest']
                composer-versions: ['composer:v2']
            fail-fast: false
        name: PHP ${{ matrix.php-versions }} @ ${{ matrix.operating-system }} with ${{ matrix.composer-versions }} ${{ matrix.composer-options }}
        steps:
            - name: Checkout
              uses: actions/checkout@master
            - name: Install PHP
              uses: shivammathur/setup-php@master
              with:
                  php-version: ${{ matrix.php-versions }}
                  tools: ${{ matrix.composer-versions }}
                  extensions: xdebug, mbstring, posix
            - name: Check Versions
              run: |
                php -v
                php -m
                composer --version
            - name: Get composer cache directory
              id: composercache
              run: echo "::set-output name=dir::$(composer config cache-files-dir)"
            - name: Cache dependencies
              uses: actions/cache@v3
              with:
                  path: ${{ steps.composercache.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
                  restore-keys: ${{ runner.os }}-composer-
            - name: Install dependencies
              if: matrix.php-versions != '8.2'
              run: composer update --prefer-dist --no-progress --no-suggest ${{ matrix.composer-options }}
            - name: Install dependencies (Ignore platform)
              if: matrix.php-versions == '8.2'
              run: composer update --prefer-dist --no-progress --no-suggest ${{ matrix.composer-options }} --ignore-platform-req=php+
            - name: Set git variables
              run: |
                git config --global user.email "you@example.com"
                git config --global user.name "Your Name"
                git config --global protocol.file.allow always
            - name: Run the tests on Windows
              if: runner.os == 'Windows'
              run: php vendor/bin/grumphp run --no-interaction --testsuite=windows
            - name: Run the tests on unix
              if: runner.os != 'Windows'
              run: php vendor/bin/grumphp run --no-interaction --testsuite=ci
              continue-on-error: ${{ matrix.php-versions == '8.1' && matrix.composer-options == '--prefer-lowest' }}
            - name: Run paratest outside of grumphp
              run: php ./vendor/bin/paratest --testsuite=E2E -f --verbose
